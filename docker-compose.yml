version: '3.8'
name: 'rinha-backend'

services:
  api-1: &api
    image: rodriginhu/rinha-backend
    hostname: api-1
    environment:
      - SERVER_PORT=8080
      - DATABASE_URL=jdbc:postgresql://localhost:5432/postgres
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=postgres
      - REDIS_HOST=localhost
    ports:
      - '8080:8080'
    depends_on:
      postgres-db:
        condition: service_healthy
      cache:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.45'
          memory: '900M'
    network_mode: 'host'

  api-2:
    <<: *api
    hostname: api-2
    environment:
      - SERVER_PORT=8081
      - DATABASE_URL=jdbc:postgresql://localhost:5432/postgres
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=postgres
      - REDIS_HOST=localhost
    ports:
      - '8081:8081'

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api-1
      - api-2
    ports:
      - '9999:9999'
    deploy:
      resources:
        limits:
          cpus: '0.05'
          memory: '350M'
    network_mode: 'host'

  postgres-db:
    image: postgres:latest
    container_name: postgres-db
    hostname: postgres-db
    command:
      'postgres -c max_connections=600 -c shared_buffers=512MB -c synchronous_commit=off -c fsync=off'
#     maintenance_work_mem=256MB  -c full_page_writes=off -c autovacuum=on -c log_statement=none -c log_duration=off
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -p 5432 -U postgres" ]
      interval: 3s
      timeout: 5s
      retries: 10
    ports:
      - '5432:5432'
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '1200M'
    volumes:
      - ./rinha-backend/src/main/resources/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgresql.conf:/docker-entrypoint-initdb.d/postgresql.conf
    network_mode: 'host'

  cache:
    hostname: cache
    image: redis:latest
    ports:
      - '6379:6379'
    deploy:
      resources:
        limits:
          cpus: '0.05'
          memory: '50M'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    healthcheck:
      test: [ 'CMD', 'redis-cli', '--raw', 'incr', 'ping' ]
    network_mode: 'host'
